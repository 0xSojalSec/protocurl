name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to tag, build and release. (e.g. 1.2.3 or 1.2.4-dev)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Go
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -q https://go.dev/dl/go1.18.linux-amd64.tar.gz
          sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz
          export PATH="$PATH:/usr/local/go/bin"
          wget -q https://github.com/goreleaser/goreleaser/releases/download/v1.7.0/goreleaser_1.7.0_amd64.deb
          sudo dpkg -i goreleaser*.deb
          rm -f *.deb *.gz

      - name: Set Version
        run: |
          echo "Input version: ${{ github.event.inputs.version }}"
          git fetch --tags origin
          git tag "v${{ github.event.inputs.version }}"
          git push --tags
          source release/source.sh

      - name: Protoc
        run: |
          ./release/0-get-protoc-binaries.sh

      - name: Build Archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH=$PATH:/usr/local/go/bin
          ./release/1-build-go-archive.sh

      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup QEMU for docker buildx
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: DockerHub Build and Release
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/i386,linux/arm64
          build-args: VERSION=${{ github.event.inputs.version }}
          tags: qaware/protocurl:${{ github.event.inputs.version }}
          file: release/Dockerfile
          push: true
          context: .
        env:
          context: .
